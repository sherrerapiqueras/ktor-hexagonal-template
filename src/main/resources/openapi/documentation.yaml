openapi: "3.0.3"
info:
  title: "Ktor Hexagonal Template API"
  description: "Ktor Hexagonal Template API"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8080/"
paths:
  /users:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetAllUsersResponse"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /users/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing id"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetUserByIdResponse"
components:
  schemas:
    GetAllUsersResponse:
      type: "object"
      properties:
        id:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
      required:
        - "id"
        - "username"
        - "email"
    CreateUserRequest:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
        email:
          type: "string"
        name:
          type: "string"
        lastName:
          type: "string"
      required:
        - "username"
        - "password"
        - "email"
        - "name"
        - "lastName"
    UpdateUserRequest:
      type: "object"
      properties:
        id:
          type: "string"
        username:
          type: "string"
        password:
          type: "string"
        email:
          type: "string"
        name:
          type: "string"
        lastName:
          type: "string"
      required:
        - "id"
        - "username"
        - "password"
        - "email"
        - "name"
        - "lastName"
    GetUserByIdResponse:
      type: "object"
      properties:
        id:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
      required:
        - "id"
        - "username"
        - "email"